/*
 * Ravimoshark Contract API
 * This is an API to interact with Ravimoshark contracts database. # Introduction This API allow to create, modify and delete contracts and machines. It also interacts with machines imported from SAGE database. # User Authentication This API does not contain any kind of user validation but It request to have a valid authentication user to interact with it. For more information about user Authentication, please refer to [Ravimoshark User Authentication](https://ravimoshark.com/back/apis/auth/latest). 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@ravimoshark.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ravimoshark.apis.task.calls;

import com.ravimoshark.apis.task.ApiException;
import com.ravimoshark.apis.task.model.Contracts;
import com.ravimoshark.apis.task.model.CustomError;
import com.ravimoshark.apis.task.model.Deleted;
import com.ravimoshark.apis.task.model.InlineResponse2001;
import com.ravimoshark.apis.task.model.RefContract;
import com.ravimoshark.apis.task.model.Reviewed;
import com.ravimoshark.apis.task.model.Valid;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContractsApi
 */
@Ignore
public class ContractsApiTest {

    private final ContractsApi api = new ContractsApi();

    /**
     * Add one contract.
     *
     * Add one contract.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addContractTest() throws ApiException {
        Contracts body = null;
        Contracts response = api.addContract(body);

        // TODO: test validations
    }
    /**
     * Delete one contract.
     *
     * Delete one contract.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteContractTest() throws ApiException {
        Long refContract = null;
        RefContract response = api.deleteContract(refContract);

        // TODO: test validations
    }
    /**
     * Edit one contract.
     *
     * Edit one contract.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editContractTest() throws ApiException {
        Contracts body = null;
        Contracts response = api.editContract(body);

        // TODO: test validations
    }
    /**
     * Get one contract.
     *
     * Get one contract.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContractByIdTest() throws ApiException {
        Long refContract = null;
        Deleted deleted = null;
        Contracts response = api.getContractById(refContract, deleted);

        // TODO: test validations
    }
    /**
     * Get all contracts.
     *
     * Get all contracts.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContractsTest() throws ApiException {
        Integer skip = null;
        Integer limit = null;
        String orderBy = null;
        String filterBy = null;
        Deleted deleted = null;
        Boolean metadata = null;
        Valid valid = null;
        Reviewed reviewed = null;
        String refClient = null;
        InlineResponse2001 response = api.getContracts(skip, limit, orderBy, filterBy, deleted, metadata, valid, reviewed, refClient);

        // TODO: test validations
    }
}
