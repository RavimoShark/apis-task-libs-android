/*
 * Ravimoshark Task API
 * This is an API to interact with Ravimoshark task database. # Introduction This API allow to create, modify and delete task, visits, technicians and interventions. # User Authentication This API does not contain any kind of user validation but It request to have a valid authentication user to interact with it. For more information about user Authentication, please refer to [Ravimoshark User Authentication](https://ravimoshark.com/back/apis/auth/latest). 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@ravimoshark.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ravimoshark.apis.task.calls;

import com.ravimoshark.apis.task.ApiException;
import com.ravimoshark.apis.task.model.CustomError;
import java.util.Date;
import com.ravimoshark.apis.task.model.Deleted;
import com.ravimoshark.apis.task.model.Finished;
import com.ravimoshark.apis.task.model.IdInteger;
import com.ravimoshark.apis.task.model.InlineResponse200;
import com.ravimoshark.apis.task.model.Interventions;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InterventionsApi
 */
@Ignore
public class InterventionsApiTest {

    private final InterventionsApi api = new InterventionsApi();

    /**
     * Add one intervention.
     *
     * Add one intervention.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addInterventionTest() throws ApiException {
        Interventions body = null;
        Interventions response = api.addIntervention(body);

        // TODO: test validations
    }
    /**
     * Delete one intervention.
     *
     * Delete one intervention.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteInterventionTest() throws ApiException {
        Long id = null;
        IdInteger response = api.deleteIntervention(id);

        // TODO: test validations
    }
    /**
     * Edit one intervention.
     *
     * Edit one intervention.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editInterventionTest() throws ApiException {
        Interventions body = null;
        Interventions response = api.editIntervention(body);

        // TODO: test validations
    }
    /**
     * Get one intervention.
     *
     * Get one intervention.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInterventionByIdTest() throws ApiException {
        Long id = null;
        Deleted deleted = null;
        Interventions response = api.getInterventionById(id, deleted);

        // TODO: test validations
    }
    /**
     * Get all interventions.
     *
     * Get all interventions.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getInterventionsTest() throws ApiException {
        Integer skip = null;
        Integer limit = null;
        String orderBy = null;
        String filterBy = null;
        Deleted deleted = null;
        Boolean metadata = null;
        String refClient = null;
        Long technicianId = null;
        Long taskId = null;
        Date dateFrom = null;
        Date dateUntil = null;
        InlineResponse200 response = api.getInterventions(skip, limit, orderBy, filterBy, deleted, metadata, refClient, technicianId, taskId, dateFrom, dateUntil);

        // TODO: test validations
    }
}
