/*
 * Ravimoshark Task API
 * This is an API to interact with Ravimoshark task database. # Introduction This API allow to create, modify and delete task, visits, technicians and interventions. # User Authentication This API does not contain any kind of user validation but It request to have a valid authentication user to interact with it. For more information about user Authentication, please refer to [Ravimoshark User Authentication](https://ravimoshark.com/back/apis/auth/latest). 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@ravimoshark.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ravimoshark.apis.task.model;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.v3.oas.annotations.media.Schema;
import com.google.gson.annotations.SerializedName;
import java.io.Serializable;
import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Type of task.
 */
@JsonAdapter(TaskTypes.Adapter.class)
public enum TaskTypes {
  CANCELLATION("CANCELLATION"),
  CHANGE_PIECE("CHANGE_PIECE"),
  STOP_PARTIAL("STOP_PARTIAL"),
  STOP_TOTAL("STOP_TOTAL"),
  PROBLEM_RESULT("PROBLEM_RESULT"),
  UNKNOWN("UNKNOWN");

  private String value;

  TaskTypes(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TaskTypes fromValue(String text) {
    for (TaskTypes b : TaskTypes.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<TaskTypes> {
    @Override
    public void write(final JsonWriter jsonWriter, final TaskTypes enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TaskTypes read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TaskTypes.fromValue(String.valueOf(value));
    }
  }
}
