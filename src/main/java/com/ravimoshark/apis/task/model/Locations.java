/*
 * Ravimoshark Contract API
 * This is an API to interact with Ravimoshark contracts database. # Introduction This API allow to create, modify and delete contracts and machines. It also interacts with machines imported from SAGE database. # User Authentication This API does not contain any kind of user validation but It request to have a valid authentication user to interact with it. For more information about user Authentication, please refer to [Ravimoshark User Authentication](https://ravimoshark.com/back/apis/auth/latest). 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@ravimoshark.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ravimoshark.apis.task.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ravimoshark.apis.task.model.Contracts;
import com.ravimoshark.apis.task.model.Machines;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.io.Serializable;
/**
 * Client&#x27;s contract.
 */
@Schema(description = "Client's contract.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-10-20T13:36:04.593821+02:00[Europe/Rome]")
public class Locations implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("id")
  private Long id = null;

  @SerializedName("machine")
  private Machines machine = null;

  @SerializedName("machineId")
  private Long machineId = null;

  @SerializedName("refContract")
  private Long refContract = null;

  @SerializedName("contract")
  private Contracts contract = null;

  public Locations id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Locations machine(Machines machine) {
    this.machine = machine;
    return this;
  }

   /**
   * Get machine
   * @return machine
  **/
  @Schema(description = "")
  public Machines getMachine() {
    return machine;
  }

  public void setMachine(Machines machine) {
    this.machine = machine;
  }

  public Locations machineId(Long machineId) {
    this.machineId = machineId;
    return this;
  }

   /**
   * Get machineId
   * @return machineId
  **/
  @Schema(description = "")
  public Long getMachineId() {
    return machineId;
  }

  public void setMachineId(Long machineId) {
    this.machineId = machineId;
  }

  public Locations refContract(Long refContract) {
    this.refContract = refContract;
    return this;
  }

   /**
   * Get refContract
   * @return refContract
  **/
  @Schema(description = "")
  public Long getRefContract() {
    return refContract;
  }

  public void setRefContract(Long refContract) {
    this.refContract = refContract;
  }

  public Locations contract(Contracts contract) {
    this.contract = contract;
    return this;
  }

   /**
   * Get contract
   * @return contract
  **/
  @Schema(description = "")
  public Contracts getContract() {
    return contract;
  }

  public void setContract(Contracts contract) {
    this.contract = contract;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Locations locations = (Locations) o;
    return Objects.equals(this.id, locations.id) &&
        Objects.equals(this.machine, locations.machine) &&
        Objects.equals(this.machineId, locations.machineId) &&
        Objects.equals(this.refContract, locations.refContract) &&
        Objects.equals(this.contract, locations.contract);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, machine, machineId, refContract, contract);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Locations {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    machine: ").append(toIndentedString(machine)).append("\n");
    sb.append("    machineId: ").append(toIndentedString(machineId)).append("\n");
    sb.append("    refContract: ").append(toIndentedString(refContract)).append("\n");
    sb.append("    contract: ").append(toIndentedString(contract)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
