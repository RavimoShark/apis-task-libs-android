/*
 * Ravimoshark Task API
 * This is an API to interact with Ravimoshark task database. # Introduction This API allow to create, modify and delete task, visits, technicians and interventions. # User Authentication This API does not contain any kind of user validation but It request to have a valid authentication user to interact with it. For more information about user Authentication, please refer to [Ravimoshark User Authentication](https://ravimoshark.com/back/apis/auth/latest). 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@ravimoshark.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ravimoshark.apis.task.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ravimoshark.apis.task.model.Addresses;
import com.ravimoshark.apis.task.model.Interventions;
import com.ravimoshark.apis.task.model.Machines;
import com.ravimoshark.apis.task.model.TaskTypes;
import com.ravimoshark.apis.task.model.Technicians;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.io.Serializable;
/**
 * Task information.
 */
@Schema(description = "Task information.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-10-24T10:29:12.559+02:00[Europe/Paris]")
public class Tasks implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("id")
  private Long id = null;

  @SerializedName("addressId")
  private Long addressId = null;

  @SerializedName("address")
  private Addresses address = null;

  @SerializedName("technicianId")
  private Long technicianId = null;

  @SerializedName("technician")
  private Technicians technician = null;

  @SerializedName("taskType")
  private TaskTypes taskType = null;

  @SerializedName("machine")
  private Machines machine = null;

  @SerializedName("machineId")
  private Long machineId = null;

  @SerializedName("dateCall")
  private Date dateCall = null;

  @SerializedName("dateFix")
  private Date dateFix = null;

  @SerializedName("problem")
  private String problem = null;

  @SerializedName("solution")
  private String solution = null;

  @SerializedName("priority")
  private Long priority = null;

  @SerializedName("initiator")
  private Technicians initiator = null;

  @SerializedName("taskTime")
  private Long taskTime = null;

  @SerializedName("ratingClient")
  private Long ratingClient = null;

  @SerializedName("ratingTech")
  private Long ratingTech = null;

  @SerializedName("interventions")
  private List<Interventions> interventions = null;

  @SerializedName("interventionsId")
  private List<Long> interventionsId = null;

  @SerializedName("createdAt")
  private Date createdAt = null;

  @SerializedName("updatedAt")
  private Date updatedAt = null;

  @SerializedName("deleted")
  private Boolean deleted = null;

  public Tasks id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Tasks addressId(Long addressId) {
    this.addressId = addressId;
    return this;
  }

   /**
   * Get addressId
   * @return addressId
  **/
  @Schema(description = "")
  public Long getAddressId() {
    return addressId;
  }

  public void setAddressId(Long addressId) {
    this.addressId = addressId;
  }

  public Tasks address(Addresses address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public Addresses getAddress() {
    return address;
  }

  public void setAddress(Addresses address) {
    this.address = address;
  }

  public Tasks technicianId(Long technicianId) {
    this.technicianId = technicianId;
    return this;
  }

   /**
   * Get technicianId
   * @return technicianId
  **/
  @Schema(description = "")
  public Long getTechnicianId() {
    return technicianId;
  }

  public void setTechnicianId(Long technicianId) {
    this.technicianId = technicianId;
  }

  public Tasks technician(Technicians technician) {
    this.technician = technician;
    return this;
  }

   /**
   * Get technician
   * @return technician
  **/
  @Schema(description = "")
  public Technicians getTechnician() {
    return technician;
  }

  public void setTechnician(Technicians technician) {
    this.technician = technician;
  }

  public Tasks taskType(TaskTypes taskType) {
    this.taskType = taskType;
    return this;
  }

   /**
   * Get taskType
   * @return taskType
  **/
  @Schema(description = "")
  public TaskTypes getTaskType() {
    return taskType;
  }

  public void setTaskType(TaskTypes taskType) {
    this.taskType = taskType;
  }

  public Tasks machine(Machines machine) {
    this.machine = machine;
    return this;
  }

   /**
   * Get machine
   * @return machine
  **/
  @Schema(description = "")
  public Machines getMachine() {
    return machine;
  }

  public void setMachine(Machines machine) {
    this.machine = machine;
  }

  public Tasks machineId(Long machineId) {
    this.machineId = machineId;
    return this;
  }

   /**
   * Get machineId
   * @return machineId
  **/
  @Schema(description = "")
  public Long getMachineId() {
    return machineId;
  }

  public void setMachineId(Long machineId) {
    this.machineId = machineId;
  }

  public Tasks dateCall(Date dateCall) {
    this.dateCall = dateCall;
    return this;
  }

   /**
   * Get dateCall
   * @return dateCall
  **/
  @Schema(description = "")
  public Date getDateCall() {
    return dateCall;
  }

  public void setDateCall(Date dateCall) {
    this.dateCall = dateCall;
  }

  public Tasks dateFix(Date dateFix) {
    this.dateFix = dateFix;
    return this;
  }

   /**
   * Get dateFix
   * @return dateFix
  **/
  @Schema(description = "")
  public Date getDateFix() {
    return dateFix;
  }

  public void setDateFix(Date dateFix) {
    this.dateFix = dateFix;
  }

  public Tasks problem(String problem) {
    this.problem = problem;
    return this;
  }

   /**
   * Get problem
   * @return problem
  **/
  @Schema(description = "")
  public String getProblem() {
    return problem;
  }

  public void setProblem(String problem) {
    this.problem = problem;
  }

  public Tasks solution(String solution) {
    this.solution = solution;
    return this;
  }

   /**
   * Get solution
   * @return solution
  **/
  @Schema(description = "")
  public String getSolution() {
    return solution;
  }

  public void setSolution(String solution) {
    this.solution = solution;
  }

  public Tasks priority(Long priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(description = "")
  public Long getPriority() {
    return priority;
  }

  public void setPriority(Long priority) {
    this.priority = priority;
  }

  public Tasks initiator(Technicians initiator) {
    this.initiator = initiator;
    return this;
  }

   /**
   * Get initiator
   * @return initiator
  **/
  @Schema(description = "")
  public Technicians getInitiator() {
    return initiator;
  }

  public void setInitiator(Technicians initiator) {
    this.initiator = initiator;
  }

  public Tasks taskTime(Long taskTime) {
    this.taskTime = taskTime;
    return this;
  }

   /**
   * Get taskTime
   * @return taskTime
  **/
  @Schema(description = "")
  public Long getTaskTime() {
    return taskTime;
  }

  public void setTaskTime(Long taskTime) {
    this.taskTime = taskTime;
  }

  public Tasks ratingClient(Long ratingClient) {
    this.ratingClient = ratingClient;
    return this;
  }

   /**
   * Get ratingClient
   * @return ratingClient
  **/
  @Schema(description = "")
  public Long getRatingClient() {
    return ratingClient;
  }

  public void setRatingClient(Long ratingClient) {
    this.ratingClient = ratingClient;
  }

  public Tasks ratingTech(Long ratingTech) {
    this.ratingTech = ratingTech;
    return this;
  }

   /**
   * Get ratingTech
   * @return ratingTech
  **/
  @Schema(description = "")
  public Long getRatingTech() {
    return ratingTech;
  }

  public void setRatingTech(Long ratingTech) {
    this.ratingTech = ratingTech;
  }

  public Tasks interventions(List<Interventions> interventions) {
    this.interventions = interventions;
    return this;
  }

  public Tasks addInterventionsItem(Interventions interventionsItem) {
    if (this.interventions == null) {
      this.interventions = new ArrayList<Interventions>();
    }
    this.interventions.add(interventionsItem);
    return this;
  }

   /**
   * Get interventions
   * @return interventions
  **/
  @Schema(description = "")
  public List<Interventions> getInterventions() {
    return interventions;
  }

  public void setInterventions(List<Interventions> interventions) {
    this.interventions = interventions;
  }

  public Tasks interventionsId(List<Long> interventionsId) {
    this.interventionsId = interventionsId;
    return this;
  }

  public Tasks addInterventionsIdItem(Long interventionsIdItem) {
    if (this.interventionsId == null) {
      this.interventionsId = new ArrayList<Long>();
    }
    this.interventionsId.add(interventionsIdItem);
    return this;
  }

   /**
   * Get interventionsId
   * @return interventionsId
  **/
  @Schema(description = "")
  public List<Long> getInterventionsId() {
    return interventionsId;
  }

  public void setInterventionsId(List<Long> interventionsId) {
    this.interventionsId = interventionsId;
  }

  public Tasks createdAt(Date createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public Date getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  public Tasks updatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public Date getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Tasks deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @Schema(description = "")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tasks tasks = (Tasks) o;
    return Objects.equals(this.id, tasks.id) &&
        Objects.equals(this.addressId, tasks.addressId) &&
        Objects.equals(this.address, tasks.address) &&
        Objects.equals(this.technicianId, tasks.technicianId) &&
        Objects.equals(this.technician, tasks.technician) &&
        Objects.equals(this.taskType, tasks.taskType) &&
        Objects.equals(this.machine, tasks.machine) &&
        Objects.equals(this.machineId, tasks.machineId) &&
        Objects.equals(this.dateCall, tasks.dateCall) &&
        Objects.equals(this.dateFix, tasks.dateFix) &&
        Objects.equals(this.problem, tasks.problem) &&
        Objects.equals(this.solution, tasks.solution) &&
        Objects.equals(this.priority, tasks.priority) &&
        Objects.equals(this.initiator, tasks.initiator) &&
        Objects.equals(this.taskTime, tasks.taskTime) &&
        Objects.equals(this.ratingClient, tasks.ratingClient) &&
        Objects.equals(this.ratingTech, tasks.ratingTech) &&
        Objects.equals(this.interventions, tasks.interventions) &&
        Objects.equals(this.interventionsId, tasks.interventionsId) &&
        Objects.equals(this.createdAt, tasks.createdAt) &&
        Objects.equals(this.updatedAt, tasks.updatedAt) &&
        Objects.equals(this.deleted, tasks.deleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, addressId, address, technicianId, technician, taskType, machine, machineId, dateCall, dateFix, problem, solution, priority, initiator, taskTime, ratingClient, ratingTech, interventions, interventionsId, createdAt, updatedAt, deleted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tasks {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    addressId: ").append(toIndentedString(addressId)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    technicianId: ").append(toIndentedString(technicianId)).append("\n");
    sb.append("    technician: ").append(toIndentedString(technician)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("    machine: ").append(toIndentedString(machine)).append("\n");
    sb.append("    machineId: ").append(toIndentedString(machineId)).append("\n");
    sb.append("    dateCall: ").append(toIndentedString(dateCall)).append("\n");
    sb.append("    dateFix: ").append(toIndentedString(dateFix)).append("\n");
    sb.append("    problem: ").append(toIndentedString(problem)).append("\n");
    sb.append("    solution: ").append(toIndentedString(solution)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    initiator: ").append(toIndentedString(initiator)).append("\n");
    sb.append("    taskTime: ").append(toIndentedString(taskTime)).append("\n");
    sb.append("    ratingClient: ").append(toIndentedString(ratingClient)).append("\n");
    sb.append("    ratingTech: ").append(toIndentedString(ratingTech)).append("\n");
    sb.append("    interventions: ").append(toIndentedString(interventions)).append("\n");
    sb.append("    interventionsId: ").append(toIndentedString(interventionsId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
