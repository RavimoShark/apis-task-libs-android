/*
 * Ravimoshark Task API
 * This is an API to interact with Ravimoshark task database. # Introduction This API allow to create, modify and delete task, visits, technicians and interventions. # User Authentication This API does not contain any kind of user validation but It request to have a valid authentication user to interact with it. For more information about user Authentication, please refer to [Ravimoshark User Authentication](https://ravimoshark.com/back/apis/auth/latest). 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@ravimoshark.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ravimoshark.apis.task.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ravimoshark.apis.task.model.Addresses;
import com.ravimoshark.apis.task.model.Machines;
import com.ravimoshark.apis.task.model.TaskTypes;
import com.ravimoshark.apis.task.model.Technicians;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.Date;
import java.io.Serializable;
/**
 * Visit information.
 */
@Schema(description = "Visit information.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-10-24T10:49:45.922+02:00[Europe/Paris]")
public class Visits implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("id")
  private Long id = null;

  @SerializedName("addressId")
  private Long addressId = null;

  @SerializedName("address")
  private Addresses address = null;

  @SerializedName("technicianId")
  private Long technicianId = null;

  @SerializedName("technician")
  private Technicians technician = null;

  @SerializedName("taskType")
  private TaskTypes taskType = null;

  @SerializedName("machine")
  private Machines machine = null;

  @SerializedName("machineId")
  private Long machineId = null;

  @SerializedName("dateVisit")
  private Date dateVisit = null;

  @SerializedName("comments")
  private String comments = null;

  @SerializedName("th")
  private Long th = null;

  @SerializedName("tempWashing")
  private Long tempWashing = null;

  @SerializedName("tempRinsing")
  private Long tempRinsing = null;

  @SerializedName("conductivity")
  private Long conductivity = null;

  @SerializedName("createdAt")
  private Date createdAt = null;

  @SerializedName("updatedAt")
  private Date updatedAt = null;

  @SerializedName("deleted")
  private Boolean deleted = null;

  public Visits id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public Visits addressId(Long addressId) {
    this.addressId = addressId;
    return this;
  }

   /**
   * Get addressId
   * @return addressId
  **/
  @Schema(description = "")
  public Long getAddressId() {
    return addressId;
  }

  public void setAddressId(Long addressId) {
    this.addressId = addressId;
  }

  public Visits address(Addresses address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @Schema(description = "")
  public Addresses getAddress() {
    return address;
  }

  public void setAddress(Addresses address) {
    this.address = address;
  }

  public Visits technicianId(Long technicianId) {
    this.technicianId = technicianId;
    return this;
  }

   /**
   * Get technicianId
   * @return technicianId
  **/
  @Schema(description = "")
  public Long getTechnicianId() {
    return technicianId;
  }

  public void setTechnicianId(Long technicianId) {
    this.technicianId = technicianId;
  }

  public Visits technician(Technicians technician) {
    this.technician = technician;
    return this;
  }

   /**
   * Get technician
   * @return technician
  **/
  @Schema(description = "")
  public Technicians getTechnician() {
    return technician;
  }

  public void setTechnician(Technicians technician) {
    this.technician = technician;
  }

  public Visits taskType(TaskTypes taskType) {
    this.taskType = taskType;
    return this;
  }

   /**
   * Get taskType
   * @return taskType
  **/
  @Schema(description = "")
  public TaskTypes getTaskType() {
    return taskType;
  }

  public void setTaskType(TaskTypes taskType) {
    this.taskType = taskType;
  }

  public Visits machine(Machines machine) {
    this.machine = machine;
    return this;
  }

   /**
   * Get machine
   * @return machine
  **/
  @Schema(description = "")
  public Machines getMachine() {
    return machine;
  }

  public void setMachine(Machines machine) {
    this.machine = machine;
  }

  public Visits machineId(Long machineId) {
    this.machineId = machineId;
    return this;
  }

   /**
   * Get machineId
   * @return machineId
  **/
  @Schema(description = "")
  public Long getMachineId() {
    return machineId;
  }

  public void setMachineId(Long machineId) {
    this.machineId = machineId;
  }

  public Visits dateVisit(Date dateVisit) {
    this.dateVisit = dateVisit;
    return this;
  }

   /**
   * Get dateVisit
   * @return dateVisit
  **/
  @Schema(description = "")
  public Date getDateVisit() {
    return dateVisit;
  }

  public void setDateVisit(Date dateVisit) {
    this.dateVisit = dateVisit;
  }

  public Visits comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @Schema(description = "")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public Visits th(Long th) {
    this.th = th;
    return this;
  }

   /**
   * Get th
   * @return th
  **/
  @Schema(description = "")
  public Long getTh() {
    return th;
  }

  public void setTh(Long th) {
    this.th = th;
  }

  public Visits tempWashing(Long tempWashing) {
    this.tempWashing = tempWashing;
    return this;
  }

   /**
   * Get tempWashing
   * @return tempWashing
  **/
  @Schema(description = "")
  public Long getTempWashing() {
    return tempWashing;
  }

  public void setTempWashing(Long tempWashing) {
    this.tempWashing = tempWashing;
  }

  public Visits tempRinsing(Long tempRinsing) {
    this.tempRinsing = tempRinsing;
    return this;
  }

   /**
   * Get tempRinsing
   * @return tempRinsing
  **/
  @Schema(description = "")
  public Long getTempRinsing() {
    return tempRinsing;
  }

  public void setTempRinsing(Long tempRinsing) {
    this.tempRinsing = tempRinsing;
  }

  public Visits conductivity(Long conductivity) {
    this.conductivity = conductivity;
    return this;
  }

   /**
   * Get conductivity
   * @return conductivity
  **/
  @Schema(description = "")
  public Long getConductivity() {
    return conductivity;
  }

  public void setConductivity(Long conductivity) {
    this.conductivity = conductivity;
  }

  public Visits createdAt(Date createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @Schema(description = "")
  public Date getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }

  public Visits updatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @Schema(description = "")
  public Date getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(Date updatedAt) {
    this.updatedAt = updatedAt;
  }

  public Visits deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @Schema(description = "")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Visits visits = (Visits) o;
    return Objects.equals(this.id, visits.id) &&
        Objects.equals(this.addressId, visits.addressId) &&
        Objects.equals(this.address, visits.address) &&
        Objects.equals(this.technicianId, visits.technicianId) &&
        Objects.equals(this.technician, visits.technician) &&
        Objects.equals(this.taskType, visits.taskType) &&
        Objects.equals(this.machine, visits.machine) &&
        Objects.equals(this.machineId, visits.machineId) &&
        Objects.equals(this.dateVisit, visits.dateVisit) &&
        Objects.equals(this.comments, visits.comments) &&
        Objects.equals(this.th, visits.th) &&
        Objects.equals(this.tempWashing, visits.tempWashing) &&
        Objects.equals(this.tempRinsing, visits.tempRinsing) &&
        Objects.equals(this.conductivity, visits.conductivity) &&
        Objects.equals(this.createdAt, visits.createdAt) &&
        Objects.equals(this.updatedAt, visits.updatedAt) &&
        Objects.equals(this.deleted, visits.deleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, addressId, address, technicianId, technician, taskType, machine, machineId, dateVisit, comments, th, tempWashing, tempRinsing, conductivity, createdAt, updatedAt, deleted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Visits {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    addressId: ").append(toIndentedString(addressId)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    technicianId: ").append(toIndentedString(technicianId)).append("\n");
    sb.append("    technician: ").append(toIndentedString(technician)).append("\n");
    sb.append("    taskType: ").append(toIndentedString(taskType)).append("\n");
    sb.append("    machine: ").append(toIndentedString(machine)).append("\n");
    sb.append("    machineId: ").append(toIndentedString(machineId)).append("\n");
    sb.append("    dateVisit: ").append(toIndentedString(dateVisit)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    th: ").append(toIndentedString(th)).append("\n");
    sb.append("    tempWashing: ").append(toIndentedString(tempWashing)).append("\n");
    sb.append("    tempRinsing: ").append(toIndentedString(tempRinsing)).append("\n");
    sb.append("    conductivity: ").append(toIndentedString(conductivity)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
