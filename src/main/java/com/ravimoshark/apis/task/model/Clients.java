/*
 * Ravimoshark Task API
 * This is an API to interact with Ravimoshark task database. # Introduction This API allow to create, modify and delete task, visits, technicians and interventions. # User Authentication This API does not contain any kind of user validation but It request to have a valid authentication user to interact with it. For more information about user Authentication, please refer to [Ravimoshark User Authentication](https://ravimoshark.com/back/apis/auth/latest). 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@ravimoshark.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ravimoshark.apis.task.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ravimoshark.apis.task.model.Addresses;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
/**
 * Client minimum information.
 */
@Schema(description = "Client minimum information.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-10-24T13:31:12.276+02:00[Europe/Paris]")
public class Clients implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("refClient")
  private String refClient = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nickname")
  private String nickname = null;

  @SerializedName("group")
  private String group = null;

  @SerializedName("addresses")
  private List<Addresses> addresses = null;

  @SerializedName("addressesId")
  private List<Long> addressesId = null;

  public Clients refClient(String refClient) {
    this.refClient = refClient;
    return this;
  }

   /**
   * Get refClient
   * @return refClient
  **/
  @Schema(description = "")
  public String getRefClient() {
    return refClient;
  }

  public void setRefClient(String refClient) {
    this.refClient = refClient;
  }

  public Clients name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Clients nickname(String nickname) {
    this.nickname = nickname;
    return this;
  }

   /**
   * Get nickname
   * @return nickname
  **/
  @Schema(description = "")
  public String getNickname() {
    return nickname;
  }

  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

  public Clients group(String group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @Schema(description = "")
  public String getGroup() {
    return group;
  }

  public void setGroup(String group) {
    this.group = group;
  }

  public Clients addresses(List<Addresses> addresses) {
    this.addresses = addresses;
    return this;
  }

  public Clients addAddressesItem(Addresses addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<Addresses>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
  @Schema(description = "")
  public List<Addresses> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<Addresses> addresses) {
    this.addresses = addresses;
  }

  public Clients addressesId(List<Long> addressesId) {
    this.addressesId = addressesId;
    return this;
  }

  public Clients addAddressesIdItem(Long addressesIdItem) {
    if (this.addressesId == null) {
      this.addressesId = new ArrayList<Long>();
    }
    this.addressesId.add(addressesIdItem);
    return this;
  }

   /**
   * Get addressesId
   * @return addressesId
  **/
  @Schema(description = "")
  public List<Long> getAddressesId() {
    return addressesId;
  }

  public void setAddressesId(List<Long> addressesId) {
    this.addressesId = addressesId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Clients clients = (Clients) o;
    return Objects.equals(this.refClient, clients.refClient) &&
        Objects.equals(this.name, clients.name) &&
        Objects.equals(this.nickname, clients.nickname) &&
        Objects.equals(this.group, clients.group) &&
        Objects.equals(this.addresses, clients.addresses) &&
        Objects.equals(this.addressesId, clients.addressesId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(refClient, name, nickname, group, addresses, addressesId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Clients {\n");
    
    sb.append("    refClient: ").append(toIndentedString(refClient)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    addressesId: ").append(toIndentedString(addressesId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
